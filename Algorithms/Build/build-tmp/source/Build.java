/* autogenerated by Processing revision 1277 on 2022-03-30 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Build extends PApplet {

float x;
float y;
float radius = 1;
float r = 0;
int [] colors = {0xFF4C1A57,0xFFFF3CC7,0xFFF0F600,0xFF00E5E8,0xFF007C77,0xFF390099,0xFF9E0059,0xFFFF0054,0xFFFF5400,0xFFFFBD00};
int color_that_we_use_why_is_this_variable_so_long = colors[PApplet.parseInt(random(0,colors.length))];
float pattern_num = (random(0,6));
 public void setup() {
	/* size commented out by preprocessor */;
	background(0xFF182030);
	x = width/2;
	y = height/2;
	strokeWeight(2);
}

 public void draw() {
	fill(0xFF182030,7);
	rect(0,0,width,height);
	noFill();
	stroke(color_that_we_use_why_is_this_variable_so_long);
	circle(x,y,radius);
	stroke(color_that_we_use_why_is_this_variable_so_long);
	line(x+random(-1*radius,radius),y+random(-1*radius,radius),width/2,height/2);
	r += PI/pattern_num;
	x = x+radius*cos(r);
	y = y+radius*sin(r);
	radius *= 1.025f;
	if (radius > 1000){
		x = width/2;
		y = height/2;
		radius = 1;
		color_that_we_use_why_is_this_variable_so_long = colors[PApplet.parseInt(random(0,colors.length))];
		pattern_num = (random(0,6));
	}
}


  public void settings() { size(1000, 1000); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
