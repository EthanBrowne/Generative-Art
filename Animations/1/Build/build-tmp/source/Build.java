/* autogenerated by Processing revision 1277 on 2022-02-08 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Build extends PApplet {

int slope = newslope();
int y = 1000/2;
int x = 0;
int xinc = 6;
int oldy = y;
int oldx = x;
int c = xinc;
int bounces = 0;
int b = PApplet.parseInt(random(2,6));
int [] colors = {0xFF012A36, 0xFF29274C, 0xFF7E52A0, 0xFFD295BF, 0xFFE6BCCD};
 public void setup() {
	/* size commented out by preprocessor */;
	background(0,0,0);
}

 public void draw() {
	if (b > bounces){
		updateX();
		updateY();
		int r = PApplet.parseInt(random(0, 10));
		if (r == 0){
			slope = newslope();
		}
		for (int i = 0; i <= colors.length-1; i++){
			stroke(colors[i]);
			line(oldx, oldy+i*5, x, y+i*5);
		}
		oldy = y;
		oldx = x;
	}
}

 public int newslope() {
	return PApplet.parseInt(random(-10,11));
}

 public void updateX(){
	if (oldx >= 1000){
		c = -xinc;
		bounces++;
	}
	else if (oldx <= 0){
		c = xinc;
		bounces++;
	}
	x+=c;
}

 public void updateY(){
	if (y + slope >= height || y + slope <= 0){
		slope = slope *-1;
	}
	y += slope;
}


  public void settings() { size(1000, 1000); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
